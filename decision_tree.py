# -*- coding: utf-8 -*-
"""decision tree

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13Pw_vG7iyZ6Tb8Bvb3vi6NOGtvU5fyXt
"""

import numpy as np

import pandas as pd

import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import confusion_matrix
from sklearn.tree import export_graphviz
import graphviz

df = pd.read_csv('/content/diabetes (1).csv')

from google.colab import drive
drive.mount('/content/drive')

df.head()

df.tail()

df.describe()

df.info()

df.shape

df.dtypes

x =df.Glucose
y =df.BloodPressure

plt.scatter(x, y)

x =df.Glucose

plt.boxplot(x)

import seaborn as sns

plt.figure(figsize=(20,15))
plotnumber=1

for col in df.columns:
  if plotnumber <=8:
    ax= plt.subplot(5,5,plotnumber)
    sns.boxplot(df[col])
    plt.xlabel(col, fontsize =15)

  plotnumber +=1
plt.tight_layout()
plt.show()

x = df.drop('Outcome',axis =1)
y= df['Outcome']

#Missing values
df.isna().sum()

import missingno as msno

msno.bar(df)
plt.show()

"""train test split

"""

x_train, x_test, y_train, y_test=train_test_split(x,y,test_size = 0.5,random_state=0)

a = StandardScaler()
x_train = a.fit_transform(x_train)
x_test = a.transform(x_test)

clf = DecisionTreeClassifier(criterion="entropy",random_state=0)
clf.fit(x_train,y_train)

from sklearn.tree import export_graphviz
import graphviz

graphviz.Source(export_graphviz(clf,feature_names = x.columns,filled = True))

